generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model IdempotencyKey {
  idempotencyKey String   @id @map("idempotency_key")
  payloadHash    String   @map("payload_hash")
  messageId      String   @map("message_id")
  status         String
  createdAt      DateTime @default(now()) @map("created_at")
  expiresAt      DateTime @map("expires_at")

  @@index([expiresAt])
  @@map("idempotency_keys")
}

model Message {
  messageId         String        @id @map("message_id")
  tenantId          String?       @map("tenant_id")
  toJson            Json          @map("to_json")
  subject           String
  templateKey       String        @map("template_key")
  locale            String?
  variablesJson     Json          @map("variables_json")
  provider          String?
  providerMessageId String?       @map("provider_message_id")
  status            MessageStatus @default(QUEUED)
  attempts          Int           @default(0)
  lastError         String?       @map("last_error")
  webhookUrl        String?       @map("webhook_url")
  createdAt         DateTime      @default(now()) @map("created_at")
  updatedAt         DateTime      @updatedAt @map("updated_at")
  failureReason     String?       @map("failure_reason")

  @@index([tenantId])
  @@index([status])
  @@index([createdAt])
  @@index([provider])
  @@index([providerMessageId])
  @@map("messages")
}

model ProviderEvent {
  id        String   @id @default(cuid())
  messageId String   @map("message_id")
  provider  String
  eventType String   @map("event_type")
  rawJson   Json     @map("raw_json")
  createdAt DateTime @default(now()) @map("created_at")

  @@index([messageId])
  @@index([provider])
  @@index([eventType])
  @@index([createdAt])
  @@map("provider_events")
}

model Template {
  id             String           @id @default(cuid())
  key            String           @unique
  name           String
  description    String?
  category       String
  isActive       Boolean          @default(true)
  variableSchema Json             @map("variable_schema")
  jsonStructure  Json             @map("json_structure")
  createdAt      DateTime         @default(now()) @map("created_at")
  updatedAt      DateTime         @updatedAt @map("updated_at")
  locales        TemplateLocale[]

  @@index([key])
  @@index([category])
  @@index([isActive])
  @@map("templates")
}

model TemplateLocale {
  id            String   @id @default(cuid())
  templateId    String   @map("template_id")
  locale        String
  jsonStructure Json?    @map("json_structure")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  template      Template @relation(fields: [templateId], references: [id], onDelete: Cascade)

  @@unique([templateId, locale])
  @@index([templateId])
  @@index([locale])
  @@map("template_locales")
}

enum MessageStatus {
  QUEUED
  SENT
  DELIVERED
  BOUNCED
  FAILED
  SUPPRESSED
  OPENED
  CLICKED
}
